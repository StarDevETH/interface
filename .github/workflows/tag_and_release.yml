name: "Tag and release"

# Give the runner permission to push tags
permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  deploy-to-prod:
    runs-on: ubuntu-latest
    permissions:
      contents: write        # job‚Äëlevel write access

    steps:
      ####################################################################
      # 1. Check out the entire history so we have ALL existing tags
      ####################################################################
      - name: Check out full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0      # ‚Üñ fetch every commit & tag

      ####################################################################
      # 2. Read VERSION and RELEASE files
      ####################################################################
      - name: üß∑Ô∏è Get version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: VERSION

      - name: üßæÔ∏è Get release notes
        id: release-notes
        uses: juliangruber/read-file-action@v1
        with:
          path: RELEASE

      ####################################################################
      # 3. Decide whether the tag already exists
      ####################################################################
      - name: Does tag already exist?
        id: tagcheck
        run: |
          TAG=$(echo "${{ steps.version.outputs.content }}" | tr -d '[:space:]')
          echo "Tag to publish: $TAG"
          if git ls-remote --tags origin | grep -q "refs/tags/$TAG$"; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
            echo "Tag already exists on remote."
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
            echo "Tag does NOT exist yet."
          fi

      ####################################################################
      # 4. Create the tag ONLY if it doesn't exist
      ####################################################################
      - name: üè∑Ô∏è Tag
        if: steps.tagcheck.outputs.exists == 'false'
        id: github-tag-action
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.version.outputs.content }}
          tag_prefix: ""          # VERSION already contains full tag
          fetch_all_tags: true

      ####################################################################
      # 5. Create a GitHub Release ONLY if a new tag was pushed
      ####################################################################
      - name: ü™Ω Release
        if: steps.tagcheck.outputs.exists == 'false'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.github-tag-action.outputs.new_tag }}
          name: Release ${{ steps.github-tag-action.outputs.new_tag }}
          body: ${{ steps.release-notes.outputs.content }}

      ####################################################################
      # 6. Log a message when the tag already existed (for visibility)
      ####################################################################
      - name: Skip notice
        if: steps.tagcheck.outputs.exists == 'true'
        run: echo "Tag already existed ‚Äì skipping tag & release steps."
